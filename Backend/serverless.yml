service: ${self:custom.CloudNamingIdentifier}-backend

useDotenv: true

plugins:
  - serverless-bundle
  
provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1

functions:
  createUserLeave:
    handler: src/handlers/leaveInformation/create/createUserLeave.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /create/createUserLeave
  retrieveUserLeaves:
    handler: src/handlers/leaveInformation/retrieve/retrieveUserLeaves.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /retrieve/retrieveUserLeaves
  deleteUserLeaves:
    handler: src/handlers/leaveInformation/delete/deleteUserLeaves.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /delete/deleteUserLeaves
  updateUserLeavesStatus:
    handler: src/handlers/leaveInformation/update/updateUserLeavesStatus.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /update/updateUserLeavesStatus
  retrieveUserInformation:
    handler: src/handlers/userInformation/retrieve/retrieveUserInformation.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /retrieve/retrieveUserInformation
  updateUserInformation:
    handler: src/handlers/userInformation/update/updateUserInformation.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /update/updateUserInformation
  sesSendEmail:
    handler: src/handlers/utility/sesSendEmail.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /utility/sesSendEmail
  authenticationUserLogin:
    handler: src/handlers/userLogin/retrieve/authenticateUserLogin.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /userLogin/authenticateUserLogin
  createAttendanceInfo:
    handler: src/handlers/attendanceInfo/create/createAttendanceInfo.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /create/createAttendanceInfo
  updateAttendanceInfo:
    handler: src/handlers/attendanceInfo/update/updateAttendanceInfo.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /update/updateAttendanceInfo
  retrievePassword:
    handler: src/handlers/userLogin/retrieve/retrievePassword.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /retrieve/retrievePassword
  updatePassword:
    handler: src/handlers/userLogin/update/updatePassword.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /update/updatePassword 
  retrieveUserSchedule:
    handler: src/handlers/userSchedule/retrieve/retrieveUserSchedule.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /retrieve/retrieveUserSchedule
  retrieveApprovers:
    handler: src/handlers/userInformation/retrieve/retrieveApprovers.handler
    role: AdminRole
    events:
      - http:
          method: GET
          path: /retrieve/retrieveApprovers

resources:
  Resources:
    AdminRole: ${file(resources/iamRole/AdminRole.yml):AdminRole}

custom:
   developer: ${env:DEVELOPER, ''}
   CloudNamingIdentifier:
    "${env:PROJECT_CODE}-${self:custom.developer}-${env:APP_NAME}"
   CloudNamingIdentifierInfra: "${env:PROJECT_CODE}-${self:custom.developer}"
   MainTableName: "${env:TABLE}"
   PolicyPrefix: iampolicy-${self:custom.CloudNamingIdentifierInfra}
   IAMRolePrefix: iamrole-${self:custom.CloudNamingIdentifierInfra}
