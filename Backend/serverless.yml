service: ${self:custom.CloudNamingIdentifier}-backend

useDotenv: true

plugins:
  - serverless-bundle
  
provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1

functions:
  createUserLeave:
    handler: src/handlers/leave/create/createUserLeave.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /create/createUserLeave
  retrieveUserLeaves:
    handler: src/handlers/leave/retrieve/retrieveUserLeaves.handler
    role: AdminRole
    events:
      - http:
         method: GET
         path: /retrieve/retrieveUserLeaves
  sesSendEmail:
    handler: src/handlers/utility/sesSendEmail.handler
    role: AdminRole
    events:
      - http:
         method: POST
         path: /utility/sesSendEmail

resources:
  Resources:
    AdminRole: ${file(resources/iamRole/AdminRole.yml):AdminRole}

custom:
   developer: ${env:DEVELOPER, ''}
   CloudNamingIdentifier:
    "${env:PROJECT_CODE}-${self:custom.developer}-${env:APP_NAME}"
   CloudNamingIdentifierInfra: "${env:PROJECT_CODE}-${self:custom.developer}"
   MainTableName: "${env:TABLE}"
   PolicyPrefix: iampolicy-${self:custom.CloudNamingIdentifierInfra}
   IAMRolePrefix: iamrole-${self:custom.CloudNamingIdentifierInfra}
